import allure
import pytest

@allure.epic("Автотесты_ChatbotAdmin_API")
@allure.story("User test scenario")
@allure.suite("User test scenario")
@allure.description("Сценарий взаимодействия юзера")
class TestUserScenario:

    tree_catalog_guid = None
    tree_id = None
    first_node_id = None

    @pytest.mark.run(order=1)
    def test_user_scenario(self, base_client, isso_token):
        with allure.step('Шаг 1: post tree-catalog'):
            params = {
                "name": "User scenario test",
                "parentGuid": "91875fac-c295-4faa-aa5f-08dcc26a0216",
            }
            response1 = base_client.post_example(
                route="post_tree-catalog",
                headers={"Authorization": isso_token},
                json_body=params,
            ).assert_that(
                has_status=200,
            )
            TestUserScenario.tree_catalog_guid = response1.data
            # print(tree_catalog_guid)

    @pytest.mark.run(order=2)
    def test_user_scenario_2(self, base_client, isso_token):
        with allure.step('Шаг 2: post tree'):
            params = {
                "id": 0,
                "name": "Новый диалог",
                "description": "",
                "treeCatalogGuid": TestUserScenario.tree_catalog_guid,
                "nodes": [
                  {
                    "guid": "ef5d055a-d050-5ff5-af55-5555d55555be", #Нужно генерить самому
                    "parentNode": None,
                    "priority": 0,
                    "line": "",
                    "prompt": "",
                    "descendantPrompt": "",
                    "action": 1,
                    "parameter": "",
                    "fixedValue": "",
                    "fieldGuid": "",
                    "id": 0
                  }
                ]
            }
            response2 = base_client.post_example(
                route="post_tree",
                headers={"Authorization": isso_token},
                json_body=params,
            ).assert_that(
                has_status=200,
            )
            TestUserScenario.tree_id = response2.data
            # print(response2.data)

    @pytest.mark.run(order=3)
    def test_user_scenario_3(self, base_client, isso_token):
        with allure.step('Шаг 3: get tree'):
            response3 = base_client.get_example(
                route="get_tree",
                params={"id": TestUserScenario.tree_id},
                headers={"Authorization": isso_token}
            ).assert_that(
                has_status=200,
                validate_model=None,
            )
            TestUserScenario.first_node_id = response3.data['nodes'][0]['id']

    @pytest.mark.run(order=4)
    def test_user_scenario_4(self, base_client, isso_token):
        with allure.step('Шаг 4: post tree,add node'):
            params = {
                      "id": TestUserScenario.tree_id,
                      "name": "Новый диалог",
                      "description": "",
                      "treeCatalogGuid": TestUserScenario.tree_catalog_guid,
                      "nodes": [
                        {
                          "id": TestUserScenario.first_node_id,
                          "guid": "ef5d055a-d050-5ff5-af55-5555d55555be",
                          "parentNode": None,
                          "priority": 0,
                          "line": "",
                          "prompt": "",
                          "descendantPrompt": "",
                          "action": 1,
                          "parameter": "",
                          "fixedValue": "",
                          "fieldGuid": ""
                        },
                        {
                          "guid": "ef6d066a-d060-6ff6-af66-6666d66666be", #autogenerated
                          "parentNode": "ef5d055a-d050-5ff5-af55-5555d55555be",
                          "priority": 0,
                          "line": "",
                          "prompt": "",
                          "descendantPrompt": "",
                          "action": 1,
                          "parameter": "",
                          "fixedValue": "",
                          "fieldGuid": "",
                          "id": 0
                        }
                      ]
                    }
            response4 = base_client.post_example(
                route="post_tree",
                headers={"Authorization": isso_token},
                json_body=params,
            ).assert_that(
                has_status=200,
            )

    @pytest.mark.run(order=5)
    def test_user_scenario_5(self, base_client, isso_token):
        with allure.step('Шаг 5: post tree, delete node'):
            params = {
                "id": TestUserScenario.tree_id,
                "name": "Новый диалог",
                "description": "",
                "treeCatalogGuid": TestUserScenario.tree_catalog_guid,
                "nodes": [
                    {
                        "id": TestUserScenario.first_node_id,
                        "guid": "ef5d055a-d050-5ff5-af55-5555d55555be",
                        "parentNode": None,
                        "priority": 0,
                        "line": "",
                        "prompt": "",
                        "descendantPrompt": "",
                        "action": 1,
                        "parameter": "",
                        "fixedValue": "",
                        "fieldGuid": ""
                    }
                ]
            }
            response5 = base_client.post_example(
                route="post_tree",
                headers={"Authorization": isso_token},
                json_body=params,
            ).assert_that(
                has_status=200,
            )

    @pytest.mark.run(order=6)
    def test_user_scenario_6(self, base_client, isso_token):
        with allure.step('Шаг 6: delete tree'):
            base_client.delete_example(
                route="delete_tree_id",
                headers={"Authorization": isso_token},
                params={
                    "id": TestUserScenario.tree_id
                }
            ).assert_that(
                has_status=200,
                validate_model=None,
            )

    @pytest.mark.run(order=7)
    def test_user_scenario_7(self, base_client, isso_token):
        with allure.step('Шаг 7: post tree, delete node with no rights, should get 403'):
            params = {
              "id": 2044,
              "name": "Undeletable tree",
              "description": "",
              "treeCatalogGuid": "064626ee-e7e9-42f1-aa62-08dcc26a0216",
              "nodes": [
                {
                  "id": 34420,
                  "guid": "5775c603-e2f5-4e15-988e-db2327a75924",
                  "parentNode": None,
                  "priority": 0,
                  "line": "",
                  "prompt": "",
                  "descendantPrompt": "",
                  "action": 1,
                  "parameter": "",
                  "fixedValue": "",
                  "fieldGuid": ""
                }
              ]
            }
            response7 = base_client.post_example(
                route="post_tree",
                headers={"Authorization": isso_token},
                json_body=params,
            ).assert_that(
                has_status=403,
            )

    @pytest.mark.run(order=8)
    def test_user_scenario_8(self, base_client, isso_token):
        with allure.step('Шаг 8: delete tree with no rights, should get 403'):
            base_client.delete_example(
                route="delete_tree_id",
                headers={"Authorization": isso_token},
                params={
                    "id": 2044
                }
            ).assert_that(
                has_status=403,
                validate_model=None,
            )
